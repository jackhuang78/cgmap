buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.2.0'
    }
}
plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.10"
}
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'application'

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

repositories {
    jcenter()
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    main.resources.srcDirs += 'src/main/resources'
    test.java.srcDirs += 'src/test/kotlin'
    test.resources.srcDirs += 'src/test/resources'
}



dependencies {
    ext.kotlinVersion = '1.3.10'
    ext.spekVersion = '1.1.5'
    ext.log4jVersion = '2.8.1'

    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    compile 'io.github.microutils:kotlin-logging:1.6.22'
    compile 'com.google.guava:guava:23.0'
    compile 'com.github.ajalt:clikt:1.6.0'

    testCompile 'com.google.truth:truth:0.34'
    testCompile "org.jetbrains.kotlin:kotlin-test:${kotlinVersion}"
    testCompile "org.jetbrains.spek:spek-api:${spekVersion}"
    testCompile "org.jetbrains.spek:spek-junit-platform-engine:${spekVersion}"



}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// Run with `gradle run`
mainClassName = 'com.jhuangyc.cgmap.MainKt'

// Run with `gradle jar`
// And then `java -jar build/lib/cgmap.jar` to run Main.kt
jar {
    manifest { attributes 'Main-Class': "${mainClassName}" }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


